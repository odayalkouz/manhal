/*! popline v0.0.1 | author: kenshin54 */
!function (a) {
    var b = -2, c = -1, d = 2, e = 1, f = 0, g = !1;
    a(document).on("compositionstart", function () {
        g = !0
    }), a(document).on("compositionend", function () {
        g = !1
    });
    var h = function (b) {
        if (!a.popline.utils.isNull(a.popline.current)) {
            var c = a.contains(a.popline.current.target.get(0), b.target) || a.popline.current.target.get(0) === b.target, d = a.contains(a.popline.current.bar.get(0), b.target) || a.popline.current.bar.get(0) === b.target;
            if ((c || d) && window.getSelection().toString().length > 0 && !a.popline.current.keepSlientWhenBlankSelected()) {
                var e = (a.popline.current.target, a.popline.current.bar);
                if (e.is(":hidden") || e.is(":animated")) {
                    e.stop(!0, !0);
                    var f = j().mouseup(b);
                    a.popline.current.show(f)
                }
            } else a.popline.hideAllBar()
        }
    }, i = {
        mousedown: function (e) {

            a.popline.current = a(this).data("popline"), a.popline.hideAllBar()
        }, keyup: function (b) {
            var c = a(this).data("popline");
            if (c.bar, !g && window.getSelection().toString().length > 0 && !c.keepSlientWhenBlankSelected()) {
                var d = j().keyup(b);
                a.popline.current.show(d)
            } else a.popline.current.hide()
        }, keydown: function () {
            a.popline.current = a(this).data("popline");
            var b = window.getSelection().getRangeAt(0).getClientRects();
            b.length > 0 && a(this).data("lastKeyPos", a.popline.boundingRect())
        }
    }, j = function () {
        var f = a.popline.current.target, g = a.popline.current.bar, h = a.popline.current.settings.position, i = {
            fixed: {
                mouseup: function (a) {
                   if(a.target.id=="jq_fill_paragraph"){
                       $(".flaticon-scissors70").closest("li").show();
                   }else{
                       $(".flaticon-scissors70").closest("li").hide();
                   }

                    var b = window.getSelection().getRangeAt(0).getBoundingClientRect(), c = a.pageX - g.width() / 2, d = document.body.scrollTop || document.documentElement.scrollTop;
                    0 > c && (c = 10);
                    var e = d + b.top - g.outerHeight() - 10;
                    return {left: c, top: e}
                }, keyup: function () {
                    var f = null, h = null, i = a.popline.getRect(), j = a.popline.current.isKeyMove();
                    j === e || j === d ? f = i.right - g.width() / 2 : (j === c || j === b) && (f = i.left - g.width() / 2);
                    var k = document.body.scrollTop || document.documentElement.scrollTop;
                    return h = k + i.top - g.outerHeight() - 10, {left: f, top: h}
                }
            }, relative: {
                mouseup: function (a) {
                    var b = a.pageX - g.width() / 2;
                    0 > b && (b = 10);
                    var c = a.pageY - g.outerHeight() - parseInt(f.css("font-size")) / 2;
                    return {left: b, top: c}
                }, keyup: function () {
                    var h = null, i = null, j = a.popline.getRect(), k = a.popline.current.isKeyMove();
                    return k === e || k === d ? (h = j.right - g.width() / 2, i = a(document).scrollTop() + j.bottom - g.outerHeight() - parseInt(f.css("font-size"))) : (k === c || k === b) && (h = j.left - g.width() / 2, i = a(document).scrollTop() + j.top - g.outerHeight()), {
                        left: h,
                        top: i
                    }
                }
            }
        };
        return i[h]
    };
    a.fn.popline = function (b) {
        a.popline.utils.browser.ie || (_arguments = arguments, this.each(function () {
            if (_arguments.length >= 1 && "string" == typeof _arguments[0] && a(this).data("popline")) {
                var c = a(this).data("popline")[_arguments[0]];
                "function" == typeof c && c.apply(a(this).data("popline"), Array.prototype.slice.call(_arguments, 1))
            } else a(this).data("popline") || new a.popline(b, this)
        }), a(document).data("popline-global-binded") || (a(document).mouseup(function (a) {
            var b = this;
            setTimeout(function () {
                h.call(b, a)
            }, 1)
        }), a(document).data("popline-global-binded", !0)))
    }, a.popline = function (b, c) {
        this.settings = a.extend(!0, {}, a.popline.defaults, b), this.setPosition(this.settings.position), this.target = a(c), this.init(), a.popline.addInstance(this)
    }, a.extend(a.popline, {
        defaults: {
            zIndex: 9999,
            mode: "edit",
            enable: null,
            disable: null,
            position: "fixed",
            keepSlientWhenBlankSelected: !0
        }, instances: [], current: null, prototype: {
            init: function () {
                this.bar = a("<ul class='popline' style='z-index:" + this.settings.zIndex + "'></ul>").appendTo("body"), this.bar.data("popline", this), this.target.data("popline", this);
                var b = this, c = function (b, d) {
                    if (null === b)return !0;
                    for (var e = 0, f = b.length; f > e; e++) {
                        var g = b[e];
                        if ("string" == typeof g && d === g)return !0;
                        if (a.isArray(g) && c(g, d))return !0
                    }
                    return !1
                }, d = function (b, c) {
                    if (null === b)return !1;
                    for (var e = 0, f = b.length; f > e; e++) {
                        var g = b[e];
                        if ("string" == typeof g && c === g)return !0;
                        if (a.isArray(g)) {
                            if ((1 === g.length || !a.isArray(g[1])) && d(g, c))return !0;
                            if (d(g.slice(1), c))return !0
                        }
                    }
                    return !1
                }, e = function (f, g) {
                    for (var h in g) {
                        var i = g[h], j = a.popline.utils.isNull(i.mode) ? a.popline.defaults.mode : i.mode;
                        if (j === b.settings.mode && c(this.settings.enable, h) && !d(this.settings.disable, h)) {

                            var k = a("<li><span class='btn'></span></li>");
                            k.addClass("popline-button popline-" + h + "-button"), i.iconClass && k.children(".btn").append("<i class='" + i.iconClass + "'></i>"), i.text && k.children(".btn").append("<span class='text " + (i.textClass || "") + "'>" + i.text + "</span>"), i.bgColor && k.css({"background-color": i.bgColor}), a.isFunction(i.beforeShow) && this.beforeShowCallbacks.push({
                                name: h,
                                callback: i.beforeShow
                            }), a.isFunction(i.afterHide) && this.afterHideCallbacks.push({
                                name: h,
                                callback: i.afterHide
                            }), k.appendTo(f), i.buttons ? ($subbar = a("<ul class='subbar'></ul>"), k.append($subbar), e.call(this, $subbar, i.buttons), k.click(function (c) {
                                var d = this;
                                a(this).hasClass("boxed") || (b.switchBar(a(this), function () {
                                    a(d).siblings("li").hide().end().children(".btn").hide().end().children("ul").show().end()
                                }), c.stopPropagation())
                            })) : a.isFunction(i.action) && k.click(function (a) {
                                return function (c) {
                                    a.action.call(this, c, b)
                                }
                            }(i)), k.mousedown(function (b) {
                                a(b.target).is("input") || b.preventDefault()
                            }), k.mouseup(function (a) {
                                a.stopPropagation()
                            })
                        }
                    }
                };
                e.call(this, this.bar, a.popline.buttons), this.target.bind(i), this.bar.on("mouseenter", "li", function () {
                    a(this).hasClass("boxed") || a(this).addClass("hover")
                }), this.bar.on("mouseleave", "li", function () {
                    a(this).hasClass("boxed") || a(this).removeClass("hover")
                })
            }, show: function (a) {
                for (var b = 0, c = this.beforeShowCallbacks.length; c > b; b++) {
                    var d = this.beforeShowCallbacks[b], e = this.bar.find("li.popline-" + d.name + "-button");
                    d.callback.call(e, this)
                }
                this.bar.css("top", a.top + "px").css("left", a.left + "px").stop(!0, !0).fadeIn()
            }, hide: function () {
                var a = this;
                this.bar.is(":visible") && !this.bar.is(":animated") && this.bar.fadeOut(function () {
                    a.bar.find("li").removeClass("boxed").show(), a.bar.find(".subbar").hide(), a.bar.find(".textfield").hide(), a.bar.find(".btn").show();
                    for (var b = 0, c = a.afterHideCallbacks.length; c > b; b++) {
                        var d = a.afterHideCallbacks[b], e = a.bar.find("li.popline-" + d.name + "-button");
                        d.callback.call(e, a)
                    }
                })
            }, destroy: function () {
                this.target.unbind(i), this.target.removeData("popline"), this.target.removeData("lastKeyPos"), this.bar.remove()
            }, switchBar: function (a, b, c) {
                if ("function" == typeof b) {
                    var d = this, e = parseInt(d.bar.css("left")) + d.bar.width() / 2;
                    d.bar.animate({opacity: 0, marginTop: -d.bar.height() + "px"}, function () {
                        b.call(this), a.removeClass("hover").addClass("boxed").show(), d.bar.css("margin-top", d.bar.height() + "px"), d.bar.css("left", e - d.bar.width() / 2 + "px"), "function" == typeof c ? d.bar.animate({
                            opacity: 1,
                            marginTop: 0
                        }, c) : d.bar.animate({opacity: 1, marginTop: 0})
                    })
                }
            }, keepSlientWhenBlankSelected: function () {
                return this.settings.keepSlientWhenBlankSelected && "" === a.trim(window.getSelection().toString()) ? !0 : !1
            }, isKeyMove: function () {
                var g = this.target.data("lastKeyPos");
                return currentRect = a.popline.boundingRect(), a.popline.utils.isNull(g) ? null : currentRect.top === g.top && currentRect.bottom !== g.bottom ? e : currentRect.bottom === g.bottom && currentRect.top !== g.top ? c : currentRect.right !== g.right ? d : currentRect.left !== g.left ? b : f
            }, setPosition: function (a) {
                this.settings.position = "relative" === a ? "relative" : "fixed"
            }, beforeShowCallbacks: [], afterHideCallbacks: []
        }, hideAllBar: function () {
            for (var b = 0, c = a.popline.instances.length; c > b; b++)a.popline.instances[b].hide()
        }, addInstance: function (b) {
            a.popline.instances.push(b)
        }, boundingRect: function (b) {
            return a.popline.utils.isNull(b) && (b = window.getSelection().getRangeAt(0).getClientRects()), {
                top: parseInt(b[0].top),
                left: parseInt(b[0].left),
                right: parseInt(b[b.length - 1].right),
                bottom: parseInt(b[b.length - 1].bottom)
            }
        }, webkitBoundingRect: function () {
            for (var b = window.getSelection().getRangeAt(0).getClientRects(), c = [], d = 0, e = b.length; e > d; d++) {
                var f = b[d];
                0 !== f.width && (0 !== d && d !== b.length - 1 || 1 !== f.width) && c.push(f)
            }
            return a.popline.boundingRect(c)
        }, getRect: function () {
            return a.popline.utils.browser.firefox || a.popline.utils.browser.opera ? a.popline.boundingRect() : a.popline.utils.browser.chrome || a.popline.utils.browser.safari ? a.popline.webkitBoundingRect() : void 0
        }, utils: {
            isNull: function (a) {
                return "undefined" == typeof a || null === a ? !0 : !1
            },
            randomNumber: function () {
                return Math.floor(1e7 * Math.random() + 1)
            },
            trim: function (a) {
                return a.replace(/^\s+|\s+$/g, "")
            },
            browser: {
                chrome: navigator.userAgent.match(/chrome/i) ? !0 : !1,
                safari: navigator.userAgent.match(/safari/i) && !navigator.userAgent.match(/chrome/i) ? !0 : !1,
                firefox: navigator.userAgent.match(/firefox/i) ? !0 : !1,
                opera: navigator.userAgent.match(/opera/i) ? !0 : !1,
                ie: navigator.userAgent.match(/msie/i) ? !0 : !1,
                webkit: navigator.userAgent.match(/webkit/i) ? !0 : !1
            },
            findNodeWithTags: function (b, c) {
                for (a.isArray(c) || (c = [c]); b;) {
                    if (3 !== b.nodeType) {
                        var d = c.indexOf(b.tagName);
                        if (-1 !== d)return b
                    }
                    b = b.parentNode
                }
                return null
            }
        }, addButton: function (b) {
            a.extend(a.popline.buttons, b)
        }, buttons: {}
    })
}(jQuery), function (a) {
    var b = function () {
        var b = !1, d = window.getSelection();
        return a.popline.utils.browser.webkit ? b = a.popline.utils.findNodeWithTags(d.focusNode, "A") : a.popline.utils.browser.firefox && (b = c()), b
    }, c = function () {
        var b = window.getSelection(), c = window.getSelection().getRangeAt(0), d = c.cloneContents();
        return 1 === d.childNodes.length && "A" === d.firstChild.tagName ? !0 : a.popline.utils.findNodeWithTags(b.focusNode, "A")
    }, d = function (b, c) {
        if (0 === c.find(":text").length) {
            var d = a("<input type='text' />");
            d.addClass("textfield"), d.attr("placeholder", "http://"), d.keyup(function (d) {
                13 === d.which && (a(this).blur(), window.getSelection().removeAllRanges(), window.getSelection().addRange(c.data("selection")), document.execCommand("insertHtml", !1,  '<a href='+ a(this).val() +' target="_blank">'+c.data("selection")+'</a>'), b.hide());            }), d.mouseup(function (a) {

                a.stopPropagation()
            }), c.append(d)
        }
    };
    a.popline.addButton({
        link: {
            iconClass: "icon-link", mode: "edit", beforeShow: function (c) {
                b() ? this.find("i").removeClass("icon-link").addClass("icon-unlink") : this.find("i").removeClass("icon-unlink").addClass("icon-link"), this.data("click-event-binded") || (this.click(function (e) {
                    var f = a(this);
                    b() ? (document.execCommand("unlink"), f.find("i").removeClass("icon-unlink").addClass("icon-link")) : (d(c, f), f.hasClass("boxed") || (c.switchBar(f, function () {
                        f.siblings("li").hide().end().children(":text").show().end()
                    }, function () {
                        f.children(":text").focus()
                    }), f.data("selection", window.getSelection().getRangeAt(0)), e.stopPropagation()))
                }), this.data("click-event-binded", !0))
            }, afterHide: function () {
                this.find(":text").val("")
            }
        }
    })
}(jQuery), function (a) {
    a.popline.addButton({
        blockquote: {
            iconClass: "icon-quote-left", mode: "edit", action: function () {
                var b = window.getSelection(), c = a.popline.utils.findNodeWithTags(b.focusNode, "BLOCKQUOTE");
                c ? document.execCommand("formatblock", !1, "P") : document.execCommand("formatblock", !1, "BLOCKQUOTE")
            }
        }
    })
}(jQuery), function (a) {

    a.popline.addButton({
        bold: {
            iconClass: "icon-bold", mode: "edit", action: function () {
                document.execCommand("bold")
            }
        }, italic: {
            iconClass: "icon-italic", mode: "edit", action: function () {
                document.execCommand("italic")
            }
        }, strikethrough: {
            iconClass: "icon-strikethrough", mode: "edit", action: function () {
                document.execCommand("strikethrough")
            }
        }, underline: {
            iconClass: "icon-underline", mode: "edit", action: function () {
                document.execCommand("underline")
            }
        },cut: {
            iconClass: "flaticon-scissors70", mode: "edit", action: function () {
                CutText();
            }
        }
    })
}(jQuery), function (a) {
    a.popline.addButton({
        orderedList: {
            iconClass: "icon-list-ol", mode: "edit", action: function () {
                document.execCommand("InsertOrderedList")
            }
        }, unOrderedList: {
            iconClass: "icon-list-ul", mode: "edit", action: function () {
                document.execCommand("InsertUnorderedList")
            }
        }
    })
}(jQuery), function (a) {
    a.popline.addButton({
        justify: {
            iconClass: "icon-align-justify",
            mode: "edit",
            buttons: {
                justifyLeft: {
                    iconClass: "icon-align-left", action: function (e) {
                        EL=getSelectionParentElement();
                        $(EL).closest(".real-content").css("text-align","left");
                        //document.execCommand("JustifyLeft")
                    }
                }, justifyCenter: {
                    iconClass: "icon-align-center", action: function (e) {
                        EL=getSelectionParentElement();
                        $(EL).closest(".real-content").css("text-align","center");
                      //  document.execCommand("JustifyCenter")
                    }
                }, justifyRight: {
                    iconClass: "icon-align-right", action: function (e) {
                        EL=getSelectionParentElement();
                        $(EL).closest(".real-content").css("text-align","right");
                        //document.execCommand("JustifyRight");
                    }
                }, indent: {
                    iconClass: "icon-indent-right", action: function () {
                        document.execCommand("indent")
                    }
                }, outdent: {
                    iconClass: "icon-indent-left", action: function () {
                        document.execCommand("outdent")
                    }
                }
            }
        }
    })
}(jQuery), function (a) {
    var b = ["P", "H1", "H2", "H3", "H4", "H5", "H6", "VOID"], c = function (c) {
        var e = window.getSelection().getRangeAt(0), f = (window.getSelection().anchorNode, window.getSelection().focusNode), g = a.popline.utils.findNodeWithTags(f, b);
        c = g && g.tagName === c ? "VOID" : c;
        var h = document.createElement(c), i = e.extractContents();
        d(g);
        var j = document.createTextNode(a(i).text());
        h.appendChild(j), e.insertNode(h), window.getSelection().selectAllChildren(h)
    }, d = function (b) {
        "" === a.popline.utils.trim(a(b).text()) && a(b).remove()
    };
    a.popline.addButton({
        blockFormat: {
            text: "H",
            mode: "edit",
            buttons: {
                normal: {
                    text: "P", textClass: "lighter", action: function () {
                        c("P")
                    }
                }, h1: {
                    text: "H1", action: function () {
                        c("H1")
                    }
                }, h2: {
                    text: "H2", action: function () {
                        c("H2")
                    }
                }, h3: {
                    text: "H3", action: function () {
                        c("H3")
                    }
                }, h4: {
                    text: "H4", action: function () {
                        c("H4")
                    }
                }, h5: {
                    text: "H5", action: function () {
                        c("H5")
                    }
                }, h6: {
                    text: "H6", action: function () {
                        c("H6")
                    }
                }
            },
            afterHide: function (a) {
                a.target.find("void").contents().unwrap()
            }
        }
    })
}(jQuery), function (a) {
    var b = function (a, b) {
        if (b) {
            var c = 600, d = 480, e = (screen.width - c) / 2, f = (screen.height - d) / 2;
            window.open(a, null, "width=" + c + ", height=" + d + ", top=" + f + ", left=" + e)
        } else window.open(a)
    };
    a.popline.addButton({
        search: {
            iconClass: "icon-search", mode: "view", action: function () {
                var a = "https://www.google.com/search?q=" + encodeURIComponent(window.getSelection().toString());
                b(a, !1)
            }
        }, twitter: {
            iconClass: "icon-twitter", mode: "view", action: function () {
                var a = "https://twitter.com/intent/tweet?text=" + encodeURIComponent(window.getSelection().toString() + " - " + location.href);
                b(a, !0)
            }
        }, facebook: {
            iconClass: "icon-facebook", mode: "view", action: function () {
                var a = "http://www.facebook.com/sharer.php";
                params = [], params.push("s=100"), params.push("p[summary]=" + encodeURIComponent(window.getSelection().toString())), params.push("p[url]=" + encodeURIComponent(location.href)), b(a + "?" + params.join("&"), !0)
            }
        }, pinterest: {
            iconClass: "icon-pinterest", mode: "view", action: function () {
                var c = "http://pinterest.com/pin/create/button/", d = window.getSelection().getRangeAt(0), e = d.cloneContents(), f = a("<p />");
                f.append(e);
                var g = f.find("img:first");
                params = [], params.push("url=" + encodeURIComponent(location.href)), g.length > 0 && params.push("media=" + encodeURIComponent(g.attr("src"))), b(c + "?" + params.join("&"), !0)
            }
        }
    })
}(jQuery), function (a) {
    var b = /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/i, c = function () {
        var a = !1, c = window.getSelection();
        return b.test(c.toString()) && (a = !0), a
    };
    a.popline.addButton({
        email: {
            text: "@", mode: "view", beforeShow: function () {
                c() || this.hide()
            }, action: function () {
                var b = a("<a></a>").attr("id", "popline-email-link").attr("href", "mailto:" + window.getSelection().toString());
                b.click(function (a) {
                    a.stopPropagation()
                }), a(this).find(".btn").after(b), b[0].click(), b.remove()
            }
        }
    })
}(jQuery), function (a) {
    function b(a) {
        var b = a.toString(16);
        return 1 == b.length ? "0" + b : b
    }

    function c(a) {
        if ("#" === a.substr(0, 1))return a;
        var c = /(.*?)rgb\((\d+), (\d+), (\d+)\)/.exec(a), d = parseInt(c[2]), e = parseInt(c[3]), f = parseInt(c[4]);
        return "#" + b(d) + b(e) + b(f)
    }
    var d = ["#FF0000", "#FFFF00", "#9CBE5A", "#00AE52", "#07A8EC", "#002463", "#7349A5", "#000000", "#FFFFFF","#e57326","#006c45","#ec008c","#41ad49","#00aeef","#21714b","#fcbf96","#0068b4","#7a2a90","#009553","#f47f7e","#b55431","#5d6d66","#af8135","#279a9f","#842985","#d2232a","#b55431","#a8282d","#b77d33","#ffcb05","#ce7587","#7d4c9e","#b55331","#53655e","#a0742b","#0a9499","#842a85","#d64637","#3d5091","#5266ae","#026d96","#0a87b5","#905128","#8c1954","#7f5b03","#fc86ba","#89898b","#00a88e"], e = function () {
        var b = {};
        return a(d).each(function (d, e) {
            b["color" + d] = {
                bgColor: e, text: "&nbsp", action: function () {
                    document.execCommand("ForeColor", !1, c(a(this).css("background-color")))
                }
            }
        }), b
    };
    a.popline.addButton({color: {iconClass: "icon-font", mode: "edit", buttons: e()}})
}(jQuery);

(function($) {
    var m_size = [
        '1',
        '2',
        '3',
        '4',
        '5',
        '6',
        '7',
    ];
    var getMSizeButtons = function ()
    {
        var buttons = {};
        $(m_size).each(function (index, size)
        {
            buttons['size' + index] = {
                text: size,
                action: function (event) {
                    document.execCommand('fontSize', false,size);
                }
            }
        });
        return buttons;
    }
    $.popline.addButton({
        Font: {
            iconClass: "icon-text-width",
            mode: "edit",
            buttons: getMSizeButtons()
        }
    });
})(jQuery);
function getSelectionParentElement()
{
    var parentEl = null, sel;
    if (window.getSelection) {
        sel = window.getSelection();
        if (sel.rangeCount) {
            parentEl = sel.getRangeAt(0).commonAncestorContainer;
            if (parentEl.nodeType != 1) {
                parentEl = parentEl.parentNode;
            }
        }
    } else if ( (sel = document.selection) && sel.type != "Control") {
        parentEl = sel.createRange().parentElement();
    }
    return parentEl;
}